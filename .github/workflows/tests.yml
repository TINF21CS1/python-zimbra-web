name: Tests

on:
  - push

jobs:
  test:
    name: Test with tox
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.8']
      
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      env:
        ZIMBRA_USERNAME: ${{ secrets.ZIMBRA_USERNAME }}
        ZIMBRA_PASSWORD: ${{ secrets.ZIMBRA_PASSWORD }}
      run: tox
  docs:
    name: Generate Documentation
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_dev.txt
    - name: Build Sphinx HTML documentation
      run: sphinx-build -b html docs/source docs/build/html
    - name: Archive documentation
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docs/build/html
    - name: Deploy develop documentation to GitHub Pages 
      uses: JamesIves/github-pages-deploy-action@4.1.5
      if: github.ref == 'refs/heads/develop'
      with:
        branch: docs
        target-folder: develop
        folder: docs/build/html
    - name: Deploy release documentation to GitHub Pages 
      uses: JamesIves/github-pages-deploy-action@4.1.5
      if: github.ref == 'refs/heads/main'
      with:
        branch: docs
        folder: docs/build/html
  deploy:
    name: Build and publish Python distribution to PyPI
    needs: docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
    - name: Archive binary wheel
      uses: actions/upload-artifact@v2
      with:
        name: binary-wheel
        path: dist/*.whl
    - name: Publish distribution to PyPI
      if: github.ref == 'refs/heads/main'
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}